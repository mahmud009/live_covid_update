{"version":3,"sources":["assets/stay-home.png","assets/quarantine.png","assets/shield.png","components/GlobalChart.js","components/GloabalStat.js","components/CountryChart.js","components/CountryStat.js","components/Landing.js","components/Navmenu.js","components/Preloader.js","App.js","serviceWorker.js","static.js","index.js"],"names":["module","exports","GlobalChart","props","globalData","state","series","total_cases","total_deaths","total_recovered","options","fill","type","gradient","shade","shadeIntensity","opacityFrom","opacityTo","stops","colors","labels","tooltip","enabled","y","formatter","val","title","name","chart","animations","easing","speed","dynamicAnimation","responsive","breakpoint","width","plotOptions","pie","donut","size","show","color","fontFamily","fontWeight","offsetY","value","fontSize","total","label","w","stroke","dataLabels","legend","position","itemMargin","horizontal","vertical","this","Component","GlobalStat","className","end","separator","active_cases","new_cases","new_deaths","serious_critical","href","CountryChart","console","log","countryData","map","m","Number","replace","dates","date","Date","record_date","getDate","getMonth","toUpperCase","data","id","height","stacked","events","selection","e","xaxis","min","toolbar","curve","horizontalAlign","categories","style","axisBorder","axisTicks","yaxis","grid","lines","nextProps","setState","React","CountryStat","countryNames","countryFlag","allNames","persist","fetch","includes","target","method","headers","then","res","json","months","stat_by_country","format","getFullYear","i","setDate","currentDate","filtered","filter","push","length","isLoadedCountry","country_name","action","onChange","setCountryName","selected","key","Landing","Navmenu","src","Logo","alt","Home","Shield","Preloader","App","isLoadedGlobal","isCountryNamesLoaded","allData","isAllDataLoaded","num","affected_countries","sort","Fragment","Boolean","window","location","hostname","match","$","on","toggleClass","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cc18d532.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/stay-home.7f1b657a.png\";","module.exports = __webpack_public_path__ + \"static/media/quarantine.84f1d79b.png\";","module.exports = __webpack_public_path__ + \"static/media/shield.18407fba.png\";","import React, { Component } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\nclass GlobalChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.globalData = this.props.globalData;\r\n\r\n    this.state = {\r\n      series: [\r\n        this.globalData.total_cases,\r\n        this.globalData.total_deaths,\r\n        this.globalData.total_recovered,\r\n      ],\r\n\r\n      options: {\r\n        fill: {\r\n          type: \"gradient\",\r\n          gradient: {\r\n            shade: \"dark\",\r\n            type: \"vertical\",\r\n            shadeIntensity: 0.5,\r\n            opacityFrom: 0.4,\r\n            opacityTo: 1,\r\n            stops: [0, 90, 100],\r\n          },\r\n        },\r\n        colors: [\"#007BFF\", \"#EB5569\", \"#00BB81\"],\r\n        labels: [\"TOTAL AFFECTED\", \"TOTAL DEATHS\", \"TOTAL RECOVERED\"],\r\n        tooltip: {\r\n          enabled: true,\r\n\r\n          y: {\r\n            formatter: function (val) {\r\n              return val + \" people\";\r\n            },\r\n            title: {\r\n              formatter: function (name) {\r\n                return name;\r\n              },\r\n            },\r\n          },\r\n        },\r\n        chart: {\r\n          animations: {\r\n            easing: \"easeinout\",\r\n            speed: 1200,\r\n            dynamicAnimation: {\r\n              enabled: true,\r\n              speed: 1200,\r\n            },\r\n          },\r\n        },\r\n\r\n        responsive: [\r\n          {\r\n            breakpoint: 600,\r\n            options: {\r\n              chart: {\r\n                width: 330,\r\n              },\r\n            },\r\n          },\r\n        ],\r\n        plotOptions: {\r\n          pie: {\r\n            donut: {\r\n              size: \"95%\",\r\n              labels: {\r\n                show: true,\r\n                color: \"#ffffff\",\r\n                name: {\r\n                  color: \"#515585\",\r\n                  fontFamily: \"Roboto, sans-serif\",\r\n                  fontWeight: \"600\",\r\n                  offsetY: 30,\r\n                },\r\n                value: {\r\n                  color: \"#ffffff\",\r\n                  fontSize: \"30px\",\r\n                  fontFamily: \"Roboto, sans-serif\",\r\n                  fontWeight: \"800\",\r\n                  offsetY: -15,\r\n                },\r\n                total: {\r\n                  show: true,\r\n                  label: \"TOTAL DEATHS\",\r\n                  fontFamily: \"Roboto, sans-serif\",\r\n                  fontWeight: \"600\",\r\n                  formatter: (w) => {\r\n                    return this.globalData.total_deaths;\r\n                  },\r\n                  color: \"#515585\",\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n\r\n        stroke: {\r\n          show: false,\r\n        },\r\n        dataLabels: {\r\n          enabled: false,\r\n        },\r\n\r\n        legend: {\r\n          show: true,\r\n          position: \"bottom\",\r\n          fontFamily: \"Roboto, sans-serif\",\r\n          labels: {\r\n            colors: \"#515585\",\r\n          },\r\n          itemMargin: {\r\n            horizontal: \"10\",\r\n            vertical: \"5\",\r\n          },\r\n        },\r\n      },\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <ReactApexChart\r\n        options={this.state.options}\r\n        series={this.state.series}\r\n        type=\"donut\"\r\n        width={380}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default GlobalChart;\r\n","import React, { Component } from \"react\";\r\nimport CountUp from \"react-countup\";\r\nimport GlobalChart from \"./GlobalChart\";\r\nimport { FaGlobeAmericas } from \"react-icons/fa\";\r\nimport { MdSecurity } from \"react-icons/md\";\r\n\r\nclass GlobalStat extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let globalData = this.props.globalData;\r\n    this.state = {\r\n      globalData,\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"col-12 col-lg-6 global-stat landing-stat \">\r\n        <div className=\"stat-inr\">\r\n          <h2 className=\"landing-title\">\r\n            <FaGlobeAmericas /> Global Outbreak\r\n          </h2>\r\n          <div className=\"global-chart-wrap d-flex justify-content-center\">\r\n            <GlobalChart globalData={this.state.globalData} />\r\n          </div>\r\n\r\n          <div className=\"counter-up\">\r\n            <div className=\"counter-single\">\r\n              <h4>\r\n                <CountUp\r\n                  end={this.state.globalData.total_cases}\r\n                  separator=\",\"\r\n                />\r\n              </h4>\r\n              <h5>TOTAL CASES</h5>\r\n            </div>\r\n            <div className=\"counter-single\">\r\n              <h4>\r\n                <CountUp\r\n                  end={this.state.globalData.total_deaths}\r\n                  separator=\",\"\r\n                />\r\n              </h4>\r\n\r\n              <h5>TOTAL DEATHS</h5>\r\n            </div>\r\n            <div className=\"counter-single\">\r\n              <h4>\r\n                <CountUp\r\n                  end={this.state.globalData.total_recovered}\r\n                  separator=\",\"\r\n                />\r\n              </h4>\r\n\r\n              <h5>TOTAL RECOVERED</h5>\r\n            </div>\r\n            <div className=\"counter-single\">\r\n              <h4>\r\n                <CountUp\r\n                  end={this.state.globalData.active_cases}\r\n                  separator=\",\"\r\n                />\r\n              </h4>\r\n\r\n              <h5>ACTIVE CASES</h5>\r\n            </div>\r\n\r\n            <div className=\"counter-single\">\r\n              <h4>\r\n                <CountUp end={this.state.globalData.new_cases} separator=\",\" />\r\n              </h4>\r\n\r\n              <h5>NEW CASE TODAY</h5>\r\n            </div>\r\n\r\n            <div className=\"counter-single\">\r\n              <h4>\r\n                <CountUp end={this.state.globalData.new_deaths} separator=\",\" />\r\n              </h4>\r\n\r\n              <h5>TODAY'S DEATHS</h5>\r\n            </div>\r\n\r\n            <div className=\"counter-single\">\r\n              <h4>\r\n                <CountUp\r\n                  end={this.state.globalData.serious_critical}\r\n                  separator=\",\"\r\n                />\r\n              </h4>\r\n\r\n              <h5>CRITICAL CASES</h5>\r\n            </div>\r\n\r\n            <div className=\"counter-single\">\r\n              <h4>\r\n                <CountUp\r\n                  end={\r\n                    (this.state.globalData.total_deaths /\r\n                      this.state.globalData.total_cases) *\r\n                    100\r\n                  }\r\n                  separator=\",\"\r\n                />\r\n                %\r\n              </h4>\r\n\r\n              <h5>DEATH'S RATIO</h5>\r\n            </div>\r\n          </div>\r\n\r\n          <a href=\"/\" className=\"btn btn-primary\">\r\n            <MdSecurity />\r\n            Stay safe\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GlobalStat;\r\n","import React, { Component } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\nclass CountryChart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    console.log(this.props);\r\n    this.countryData = this.props.countryData;\r\n\r\n    let deaths = this.props.countryData.map((m) =>\r\n      Number(m.total_deaths.replace(/,/g, \"\"))\r\n    );\r\n    let cases = this.countryData.map((m) =>\r\n      Number(m.total_cases.replace(/,/g, \"\"))\r\n    );\r\n    let recovered = this.countryData.map((m) =>\r\n      Number(m.total_recovered.replace(/,/g, \"\"))\r\n    );\r\n    let dates = this.countryData.map((m) => {\r\n      let date = new Date(m.record_date);\r\n\r\n      let months = [\r\n        \"Jan\",\r\n        \"Feb\",\r\n        \"Mar\",\r\n        \"Apr\",\r\n        \"May\",\r\n        \"Jun\",\r\n        \"Jul\",\r\n        \"Aug\",\r\n        \"Sep\",\r\n        \"Oct\",\r\n        \"Nov\",\r\n        \"Dec\",\r\n      ];\r\n      return date.getDate() + \"-\" + months[date.getMonth() - 1].toUpperCase();\r\n    });\r\n\r\n    this.state = {\r\n      series: [\r\n        {\r\n          name: \"TOTAL DEATHS\",\r\n          data: this.props.countryData.map((m) => Number(m.total_deaths)),\r\n        },\r\n        {\r\n          name: \"TOTAL RECOVERED\",\r\n          data: this.countryData.map((m) => Number(m.total_recovered)),\r\n        },\r\n      ],\r\n\r\n      options: {\r\n        chart: {\r\n          id: \"countrychart\",\r\n          type: \"area\",\r\n          height: 350,\r\n          stacked: false,\r\n          events: {\r\n            selection: function (chart, e) {\r\n              console.log(new Date(e.xaxis.min));\r\n            },\r\n          },\r\n          toolbar: {\r\n            show: false,\r\n          },\r\n        },\r\n        colors: [\"#EB5569\", \"#007BFF\"],\r\n        dataLabels: {\r\n          enabled: false,\r\n        },\r\n        stroke: {\r\n          curve: \"smooth\",\r\n        },\r\n        fill: {\r\n          type: \"gradient\",\r\n          gradient: {\r\n            opacityFrom: 0.6,\r\n            opacityTo: 0.8,\r\n          },\r\n        },\r\n        legend: {\r\n          position: \"bottom\",\r\n          horizontalAlign: \"center\",\r\n          fontFamily: \"Roboto, sans-serif\",\r\n          labels: {\r\n            colors: \"#515585\",\r\n          },\r\n          itemMargin: {\r\n            horizontal: \"10\",\r\n            vertical: \"10\",\r\n          },\r\n        },\r\n\r\n        xaxis: {\r\n          categories: [...dates],\r\n          labels: {\r\n            style: {\r\n              colors: \"#515585\",\r\n              fontFamily: \"Roboto, sans-serif\",\r\n            },\r\n          },\r\n          axisBorder: {\r\n            show: false,\r\n          },\r\n          axisTicks: {\r\n            show: false,\r\n          },\r\n        },\r\n\r\n        yaxis: {\r\n          labels: {\r\n            style: {\r\n              colors: \"#515585\",\r\n              fontFamily: \"Roboto, sans-serif\",\r\n            },\r\n          },\r\n        },\r\n\r\n        grid: {\r\n          xaxis: {\r\n            lines: {\r\n              show: false,\r\n            },\r\n          },\r\n          yaxis: {\r\n            lines: {\r\n              show: false,\r\n            },\r\n          },\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(nextProps) {\r\n    if (nextProps !== this.props) {\r\n      this.setState({\r\n        series: [\r\n          {\r\n            name: \"TOTAL DEATHS\",\r\n            data: this.props.countryData.map((m) => Number(m.total_deaths)),\r\n          },\r\n          {\r\n            name: \"TOTAL RECOVERED\",\r\n            data: this.countryData.map((m) => Number(m.total_recovered)),\r\n          },\r\n        ],\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ReactApexChart\r\n        options={this.state.options}\r\n        series={this.state.series}\r\n        type=\"area\"\r\n        height={270}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default CountryChart;\r\n","import React, { Component } from \"react\";\r\nimport CountUp from \"react-countup\";\r\nimport CountryChart from \"./CountryChart\";\r\nimport { FaFilter } from \"react-icons/fa\";\r\n\r\nclass CountryStat extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let countryData = this.props.countryData;\r\n    let countryNames = this.props.countryNames;\r\n    let countryFlag = this.props.countryFlag;\r\n    this.state = {\r\n      countryData,\r\n      countryNames,\r\n      countryFlag,\r\n    };\r\n  }\r\n\r\n  setCountryName(e) {\r\n    let allNames = [...this.state.countryNames];\r\n    e.persist();\r\n\r\n    //Fetching selected country's data and updating state.\r\n    // Rapid API Link : https://rapidapi.com/astsiatsko/api/coronavirus-monitor\r\n    //Fetching bangladesh data and updating state.\r\n    // Rapid API Link : https://rapidapi.com/astsiatsko/api/coronavirus-monitor\r\n    fetch(\r\n      `https://coronavirus-monitor.p.rapidapi.com/coronavirus/cases_by_particular_country.php?country=${\r\n        allNames.includes(e.target.value) ? e.target.value : \"Bangladesh\"\r\n      }`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"x-rapidapi-host\": \"coronavirus-monitor.p.rapidapi.com\",\r\n          \"x-rapidapi-key\":\r\n            \"2a055a73eamshcbf6774bbc5e126p1fbba3jsnb7ba8de81244\",\r\n        },\r\n      }\r\n    )\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        let countryData = [];\r\n        let months = [\r\n          \"Jan\",\r\n          \"Feb\",\r\n          \"Mar\",\r\n          \"Apr\",\r\n          \"May\",\r\n          \"Jun\",\r\n          \"Jul\",\r\n          \"Aug\",\r\n          \"Sep\",\r\n          \"Oct\",\r\n          \"Nov\",\r\n          \"Dec\",\r\n        ];\r\n\r\n        res.stat_by_country.map((m) => {\r\n          let date = new Date(m.record_date);\r\n\r\n          let format =\r\n            date.getDate() +\r\n            \"-\" +\r\n            months[date.getMonth()] +\r\n            \"-\" +\r\n            date.getFullYear();\r\n          m.record_date = format;\r\n        });\r\n\r\n        for (let i = 0; i <= 6; i++) {\r\n          let date = new Date();\r\n          date.setDate(date.getDate() - i);\r\n          let currentDate =\r\n            date.getDate() +\r\n            \"-\" +\r\n            months[date.getMonth()] +\r\n            \"-\" +\r\n            date.getFullYear();\r\n          console.log(currentDate);\r\n\r\n          let filtered = res.stat_by_country.filter(\r\n            (m) => m.record_date === currentDate\r\n          );\r\n          countryData.push(filtered[filtered.length - 1]);\r\n        }\r\n\r\n        this.setState({\r\n          countryData,\r\n          isLoadedCountry: true,\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"country-stat landing-stat col-12 col-lg-6\">\r\n        <div className=\"stat-inr\">\r\n          <h2 className=\"landing-title\">\r\n            {`${this.state.countryData[0].country_name}`} Status\r\n          </h2>\r\n\r\n          {<CountryChart countryData={this.state.countryData} />}\r\n\r\n          <div className=\"counter-up\">\r\n            <div className=\"counter-single\">\r\n              <h4>\r\n                <CountUp\r\n                  end={Number(\r\n                    this.state.countryData[0].total_cases.replace(/,/g, \"\")\r\n                  )}\r\n                  separator=\",\"\r\n                />\r\n              </h4>\r\n\r\n              <h5>TOTAL CASES</h5>\r\n            </div>\r\n\r\n            <div className=\"counter-single\">\r\n              <h4>\r\n                <CountUp\r\n                  end={Number(\r\n                    this.state.countryData[0].total_deaths.replace(/,/g, \"\")\r\n                  )}\r\n                  separator=\",\"\r\n                />\r\n              </h4>\r\n\r\n              <h5>TOTAL DEATHS</h5>\r\n            </div>\r\n\r\n            <div className=\"counter-single\">\r\n              <h4>\r\n                <CountUp\r\n                  end={Number(\r\n                    this.state.countryData[0].total_recovered.replace(/,/g, \"\")\r\n                  )}\r\n                  separator=\",\"\r\n                />\r\n              </h4>\r\n              <h5>TOTAL RECOVERED</h5>\r\n            </div>\r\n\r\n            <div className=\"counter-single\">\r\n              <h4>\r\n                <CountUp\r\n                  end={Number(\r\n                    this.state.countryData[0].active_cases.replace(/,/g, \"\")\r\n                  )}\r\n                  separator=\",\"\r\n                />\r\n              </h4>\r\n\r\n              <h5>ACTIVE CASES</h5>\r\n            </div>\r\n\r\n            <div className=\"counter-single\">\r\n              <h4>\r\n                <CountUp\r\n                  end={Number(\r\n                    this.state.countryData[0].new_cases.replace(/,/g, \"\")\r\n                  )}\r\n                  separator=\",\"\r\n                />\r\n              </h4>\r\n\r\n              <h5>NEW CASE TODAY</h5>\r\n            </div>\r\n\r\n            <div className=\"counter-single\">\r\n              <h4>\r\n                <CountUp\r\n                  end={Number(\r\n                    this.state.countryData[0].new_deaths.replace(/,/g, \"\")\r\n                  )}\r\n                  separator=\",\"\r\n                />\r\n              </h4>\r\n\r\n              <h5>NEW DEATHS TODAY</h5>\r\n            </div>\r\n\r\n            <div className=\"counter-single\">\r\n              <h4>\r\n                <CountUp\r\n                  end={Number(\r\n                    this.state.countryData[0].serious_critical.replace(/,/g, \"\")\r\n                  )}\r\n                  separator=\",\"\r\n                />\r\n              </h4>\r\n\r\n              <h5>CRITICAL CASES</h5>\r\n            </div>\r\n\r\n            <div className=\"counter-single\">\r\n              <h4>\r\n                <CountUp\r\n                  end={Number(\r\n                    (this.state.countryData[0].total_deaths.replace(/,/g, \"\") /\r\n                      this.state.countryData[0].total_cases.replace(/,/g, \"\")) *\r\n                      100\r\n                  )}\r\n                  separator=\",\"\r\n                />\r\n                %\r\n              </h4>\r\n\r\n              <h5>DEATHS RATIO</h5>\r\n            </div>\r\n          </div>\r\n          <form action=\"\" className=\"country-select\">\r\n            <label>You can change country by clicking below</label>\r\n            <FaFilter />\r\n            <select onChange={(e) => this.setCountryName(e)}>\r\n              <option>Select country to see their status</option>\r\n              {this.state.countryNames.map((m, i) => {\r\n                if (m === \"Bangladesh\") {\r\n                  return (\r\n                    <option selected value={m} key={i}>\r\n                      {m}\r\n                    </option>\r\n                  );\r\n                } else {\r\n                  return (\r\n                    <option value={m} key={i}>\r\n                      {m}\r\n                    </option>\r\n                  );\r\n                }\r\n              })}\r\n            </select>\r\n          </form>\r\n          <div className=\"bg-shade\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CountryStat;\r\n","import React, { Component } from \"react\";\r\nimport GlobalStat from \"./GloabalStat\";\r\nimport CountryStat from \"./CountryStat\";\r\n\r\nclass Landing extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"landing-sec\">\r\n        <div className=\"container d-flex justify-content-between flex-column flex-lg-row\">\r\n          <GlobalStat globalData={this.props.globalData} />\r\n\r\n          <CountryStat\r\n            countryData={this.props.countryData}\r\n            countryNames={this.props.countryNames}\r\n          />\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Landing;\r\n","import React, { Component } from \"react\";\r\nimport Logo from \"../assets/stay-home.png\";\r\nimport Home from \"../assets/quarantine.png\";\r\nimport Shield from \"../assets/shield.png\";\r\n\r\nclass Navmenu extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <header className=\"d-flex align-items-center\">\r\n        <div className=\"container\">\r\n          <nav className=\"d-flex justify-content-between align-items-center\">\r\n            <a\r\n              href=\"/\"\r\n              className=\"navbar-brand d-flex justify-content-center align-items-center\"\r\n            >\r\n              <img src={Logo} alt=\"logo\" /> <h3>COVID-19 UPDATE</h3>\r\n            </a>\r\n\r\n            <div className=\"nav-toggler\">\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n            </div>\r\n            <ul className=\"nav-wrap\">\r\n              <li className=\"d-flex align-items-center\">\r\n                <img src={Home} alt=\"home\" />\r\n                <a href=\"/\">Stay Home</a>\r\n              </li>\r\n\r\n              <li className=\"d-flex align-items-center\">\r\n                <img src={Shield} alt=\"home\" />\r\n                <a href=\"/\">Stay Safe</a>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navmenu;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Preloader extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"preloader\">\r\n        <div className=\"preloader-container d-flex align-items-center\">\r\n          <span className=\"animated-preloader\"></span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Preloader;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Landing from \"./components/Landing\";\nimport Navmenu from \"./components/Navmenu\";\nimport Preloader from \"./components/Preloader\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      globalData: \"\",\n      isLoadedGlobal: false,\n      countryData: [],\n      isLoadedCountry: false,\n      countryNames: [],\n      isCountryNamesLoaded: false,\n      allData: [],\n      isAllDataLoaded: false,\n    };\n  }\n\n  componentDidMount() {\n    // Fetching global data and update state\n    // Rapid API Link : https://rapidapi.com/astsiatsko/api/coronavirus-monitor\n    fetch(\n      \"https://coronavirus-monitor.p.rapidapi.com/coronavirus/worldstat.php\",\n      {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-host\": \"coronavirus-monitor.p.rapidapi.com\",\n          \"x-rapidapi-key\":\n            \"2a055a73eamshcbf6774bbc5e126p1fbba3jsnb7ba8de81244\",\n        },\n      }\n    )\n      .then((res) => res.json())\n      .then((res) => {\n        for (let num in res) {\n          res[num] = Number(res[num].replace(/,/g, \"\"));\n        }\n\n        this.setState({\n          isLoadedGlobal: true,\n          globalData: res,\n        });\n      });\n\n    //Fetching bangladesh data and updating state.\n    // Rapid API Link : https://rapidapi.com/astsiatsko/api/coronavirus-monitor\n    fetch(\n      \"https://coronavirus-monitor.p.rapidapi.com/coronavirus/cases_by_particular_country.php?country=Bangladesh\",\n      {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-host\": \"coronavirus-monitor.p.rapidapi.com\",\n          \"x-rapidapi-key\":\n            \"2a055a73eamshcbf6774bbc5e126p1fbba3jsnb7ba8de81244\",\n        },\n      }\n    )\n      .then((res) => res.json())\n      .then((res) => {\n        let countryData = [];\n        let months = [\n          \"Jan\",\n          \"Feb\",\n          \"Mar\",\n          \"Apr\",\n          \"May\",\n          \"Jun\",\n          \"Jul\",\n          \"Aug\",\n          \"Sep\",\n          \"Oct\",\n          \"Nov\",\n          \"Dec\",\n        ];\n\n        res.stat_by_country.map((m) => {\n          let date = new Date(m.record_date);\n\n          let format =\n            date.getDate() +\n            \"-\" +\n            months[date.getMonth()] +\n            \"-\" +\n            date.getFullYear();\n          m.record_date = format;\n        });\n\n        for (let i = 0; i <= 6; i++) {\n          let date = new Date();\n          date.setDate(date.getDate() - i);\n          let currentDate =\n            date.getDate() +\n            \"-\" +\n            months[date.getMonth()] +\n            \"-\" +\n            date.getFullYear();\n\n          let filtered = res.stat_by_country.filter(\n            (m) => m.record_date === currentDate\n          );\n          countryData.push(filtered[filtered.length - 1]);\n        }\n\n        this.setState({\n          countryData,\n          isLoadedCountry: true,\n        });\n      });\n\n    //Fetching all country names and updating state.\n    // Rapid API Link : https://rapidapi.com/astsiatsko/api/coronavirus-monitor\n\n    fetch(\n      \"https://coronavirus-monitor.p.rapidapi.com/coronavirus/affected.php\",\n      {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-host\": \"coronavirus-monitor.p.rapidapi.com\",\n          \"x-rapidapi-key\":\n            \"2a055a73eamshcbf6774bbc5e126p1fbba3jsnb7ba8de81244\",\n        },\n      }\n    )\n      .then((res) => res.json())\n      .then((res) => {\n        let countryNames = [...res.affected_countries];\n\n        countryNames.sort();\n        this.setState({\n          countryNames,\n          isCountryNamesLoaded: true,\n        });\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.isLoadedGlobal &&\n        this.state.isLoadedCountry &&\n        this.state.isCountryNamesLoaded ? (\n          <React.Fragment>\n            <Navmenu />\n            <Landing\n              globalData={this.state.globalData}\n              countryData={this.state.countryData}\n              countryNames={this.state.countryNames}\n            />\n          </React.Fragment>\n        ) : (\n          <Preloader />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import $ from \"jquery\";\r\n\r\n$(function () {\r\n  $(\".nav-toggler\").on(\"click\", () => {\r\n    $(\"header\").toggleClass(\"nav-open\");\r\n  });\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./sass/index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./static\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}